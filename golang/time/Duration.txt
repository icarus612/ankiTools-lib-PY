<i>Duration</i>.Abs(<i></i>) | <b>Time function</b> that returns the absolute value of d. As a special case, math.MinInt64 is converted to math.MaxInt64.  |  | func (d Duration) Abs() Duration 
<i>Duration</i>.Hours(<i></i>) | <b>Time function</b> that returns the duration as a floating point number of hours.  |  | func (d Duration) Hours() float64 
<i>Duration</i>.Microseconds(<i></i>) | <b>Time function</b> that returns the duration as an integer microsecond count.  |  | func (d Duration) Microseconds() int64 
<i>Duration</i>.Milliseconds(<i></i>) | <b>Time function</b> that returns the duration as an integer millisecond count.  |  | func (d Duration) Milliseconds() int64 
<i>Duration</i>.Minutes(<i></i>) | <b>Time function</b> that returns the duration as a floating point number of minutes.  |  | func (d Duration) Minutes() float64 
<i>Duration</i>.Nanoseconds(<i></i>) | <b>Time function</b> that returns the duration as an integer nanosecond count.  |  | func (d Duration) Nanoseconds() int64 
<i>Duration</i>.Round(<i>m</i>) | <b>Time function</b> that returns the result of rounding d to the nearest multiple of m. The rounding behavior for halfway values is to round away from zero. If the result exceeds the maximum (or minimum) value that can be stored in a Duration, Round returns the maximum (or minimum) duration. If m <= 0, Round returns d unchanged.  |  | func (d Duration) Round(m Duration) Duration 
<i>Duration</i>.Seconds(<i></i>) | <b>Time function</b> that returns the duration as a floating point number of seconds.  |  | func (d Duration) Seconds() float64 
<i>Duration</i>.String(<i></i>) | <b>Time function</b> that returns a string representing the duration in the form "72h3m0.5s". Leading zero units are omitted. As a special case, durations less than one second format use a smaller unit (milli-, micro-, or nanoseconds) to ensure that the leading digit is non-zero. The zero duration formats as 0s.  |  | func (d Duration) String() string 
<i>Duration</i>.Truncate(<i>m</i>) | <b>Time function</b> that returns the result of rounding d toward zero to a multiple of m. If m <= 0, Truncate returns d unchanged.  |  | func (d Duration) Truncate(m Duration) Duration 
