path.Base(<i>path</i>) | <b>Path function</b> that returns the last element of path. Trailing slashes are removed before extracting the last element. If the path is empty, Base returns ".". If the path consists entirely of slashes, Base returns "/".  |  | func Base(path string) string 
path.Clean(<i>path</i>) | <b>Path function</b> that returns the shortest path name equivalent to path by purely lexical processing. It applies the following rules iteratively until no further processing can be done:  |  | func Clean(path string) string 
path.Dir(<i>path</i>) | <b>Path function</b> that returns all but the last element of path, typically the path's directory. After dropping the final element using Split, the path is Cleaned and trailing slashes are removed. If the path is empty, Dir returns ".". If the path consists entirely of slashes followed by non-slash bytes, Dir returns a single slash. In any other case, the returned path does not end in a slash.  |  | func Dir(path string) string 
path.Ext(<i>path</i>) | <b>Path function</b> that returns the file name extension used by path. The extension is the suffix beginning at the final dot in the final slash-separated element of path; it is empty if there is no dot.  |  | func Ext(path string) string 
path.IsAbs(<i>path</i>) | <b>Path function</b> that reports whether the path is absolute.  |  | func IsAbs(path string) bool 
path.Join(<i>elem</i>) | <b>Path function</b> that joins any number of path elements into a single path, separating them with slashes. Empty elements are ignored. The result is Cleaned. However, if the argument list is empty or all its elements are empty, Join returns an empty string.  |  | func Join(elem ...string) string 
path.Match(<i>pattern</i>, <i>name</i>) | <b>Path function</b> that reports whether name matches the shell pattern. The pattern syntax is:  |  | func Match(pattern, name string) (matched bool, err error) 
path.Split(<i>path</i>) | <b>Path function</b> that splits path immediately following the final slash, separating it into a directory and file name component. If there is no slash in path, Split returns an empty dir and file set to path. The returned values have the property that path = dir+file.  |  | func Split(path string) (dir, file string) 
